/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package plusinfo;

/**
 *
 * @author Mag
 */
public class ClassInfo extends javax.swing.JFrame {
    
    String guerreiraInfo = "Guerreiros talvez pertençam a classe mais básica e antiga de todas. "
            + " Armados com lâminas e armas de grande porte, protegidos por enormes e grossos equipamentos e armaduras"
            + " são mutio poderosos. Indivíduos desta classe"
            + " costumam usasr da força, vitalidade e da estratégia de combate para subverter seus inimigos. Costumam "
            + "ser resistentes e versáteis, empunhando diversos tipos de armas e dominando vários tipos de artes marciais.";
    String ladinaInfo = "Indivíduos da classe Ladina usam golpes baixos, dificilmente atacam pela frente, são astutos,"
            + " manipuladores, suspeitos. São ótimos em fugir, assassinar, furtar e barganhar. São sempre vistos por "
            + "mals olhos, e ainda sim, em todo lugar há pelo menos um ladino. ";
    String magoInfo = "Indivíduos desta classe dominam e manipulam o fluxo de seu Chi para controlar Orbs e demais "
            + "armas mágicas. Enquanto tiverem concentração, energia e mana, são poderosíssimos no campo de batalha. "
            + "Porém, caso percam um desses 3 elementos, tornam-se um alvo fundamentalmente fácil em combate.";
    String druidaInfo = "Amantes e protetores da natureza. Os indivíduos desta classe possuem uma intensa conexão com os"
            + " elementos da natureza. E por isso, Druidas são poderosos aliados e temíveis inimigos no campo"
            + " de batalha. Podem mudar de forma, comunicar com animais, curar e atacar com as forças da natureza.";
    String paladinaInfo = "São guerreiros que trilham o caminho da luz e da verdade. Enquanto estiverem na senda de luz,"
            + " paladinos são incríveis indivíduos de grande força, resistência e habilidades de cura e purificação.";
    String rangerInfo = "Indivíduos desta classe possuem as habilidades de um grande caçador. São ágeis, versáteis, "
            + "astutos e resilientes. Dominam tanto o uso de lâminas curtas quanto ao uso de armas de disparo. Compreendem técnicas de perseguição, "
            + "e sabem como sobreviver em locais hostís e projetar estratégias e planos de ação.";
    String clerigaInfo = "Clérigos são indivíduos que utilizam de seu Chi, preces e fé para tanto abençoar quanto "
            + "amaldiçõar outros seres. Com a capacidade de curar e abençoar seus aliados, ao mesmo tempo que conjuram"
            + " pragas e maldições em seus inimigos, os clérigos são louváveis aliados no campo de batalha e podem"
            + " se tornar árduos oponentes.";
    String bardaInfo = "Bardos são guerreiros que batalham, tanto na arte, quanto no calor da batalha."
            + " Carregam espadas, machados, e diversas outras armas, mas sempre portam consigo a sua maior arma: O dom da arte."
            + " A capacidade artística e guerreira de um bardo faz com que estes indivíduos possam influenciar as emoções das"
            + " outras pessoas. Declarando poemas e cantarolando canções, bardos podem contagiar e empolgar seus aliados enquanto"
            + " duelam de espadas.";
    String fantasmaInfo = " Nas longíquas terras da Pangeia... Há relatos sobre aparições sobrenaturais, talvez demoniácas, de "
            + "um ser fantasmagórico e cruel. Dizem que surgem detrás de suas vítimas na penumbra da noite, ou na luz do luar."
            + " E na velocidade de um suspiro, ceifam a vida de suas pobres almas e desaparecem súbitamente no assobiar do vento.";
    String necromanteInfo = " Há uma lenda que conta a história de uma antiga ceita... Uma ordem de sábios que descobriram um modo "
            + "de controlar e trocar vidas para atingir um poder obscuro e fenomenal. Controlando mortos e proliferando maldições, lá"
            + "nas terras de Laurássia eles são chamados de... Necromantes.";
    String xamaInfo = "";
    String domadorInfo = "";
    String feiticeiraInfo = "Alguns contam... Num pequeno vilarejo, a taxa de violência e abuso dos homens contra as mulheres era altíssima."
            + " De fato, nesta época, os homens é quem dominam. São eles quem segura o cabo do machado e rumam para batalha.";
    
    /**
     * Creates new form ClassInfo
     */
    public ClassInfo() {
        initComponents();
        lbClass.setText("<html>"+guerreiraInfo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbClass = new javax.swing.JLabel();
        btClass = new javax.swing.JButton();
        cbClass = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Classe - Descrições");
        setResizable(false);

        lbClass.setText("?");

        btClass.setBackground(new java.awt.Color(61, 153, 153));
        btClass.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        btClass.setText("Ver");
        btClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClassActionPerformed(evt);
            }
        });

        cbClass.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        cbClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guerreira", "Ladina", "Mago", "Druida", "Paladina", "Ranger", "Clériga", "Barda", "Fantasma", "Necromante" }));
        cbClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(cbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btClass, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btClass)
                    .addComponent(cbClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClassActionPerformed
        String myClass = String.valueOf(cbClass.getSelectedItem());
        if(myClass=="Guerreira"){
            lbClass.setText("<html>"+guerreiraInfo);
        }
        if(myClass=="Ladina"){
            lbClass.setText("<html>"+ladinaInfo);
        }
        if(myClass=="Mago"){
            lbClass.setText("<html>"+magoInfo);
        }
        if(myClass=="Druida"){
            lbClass.setText("<html>"+druidaInfo);
        }
        if(myClass=="Paladina"){
            lbClass.setText("<html>"+paladinaInfo);
        }
        if(myClass=="Ranger"){
            lbClass.setText("<html>"+rangerInfo);
        }
        if(myClass=="Clériga"){
            lbClass.setText("<html>"+clerigaInfo);
        }
        if(myClass=="Barda"){
            lbClass.setText("<html>"+bardaInfo);
        }
        if(myClass=="Fantasma"){
            lbClass.setText("<html>"+fantasmaInfo);
        }
        if(myClass=="Necromante"){
            lbClass.setText("<html>"+necromanteInfo);
        }
    }//GEN-LAST:event_btClassActionPerformed

    private void cbClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClass;
    private javax.swing.JComboBox<String> cbClass;
    private javax.swing.JLabel lbClass;
    // End of variables declaration//GEN-END:variables
}
